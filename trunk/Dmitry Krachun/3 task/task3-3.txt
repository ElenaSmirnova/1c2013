#include <cstdio>
#include <iostream>
using namespace std;

struct tree//binary tree
{
    tree *left, *right;
    int num, cnt;//root contain cnt equal numbers num;
};
void go(tree *t)
{
    if(t){
        go(t->left);
        cout << t->num  << ":" << t->cnt << endl;
        go(t->right);
    }
}
void insert(tree *&t, int x)//insert element x in tree t;
{
    if(t == 0){
        t = new tree();
        t->left = 0;
        t->right = 0;
        t->num = x;
        t->cnt = 1;
    } else {
        if(t->num == x) t->cnt++;
        if(t->num > x) insert(t->left, x);
        if(t->num < x) insert(t->right, x);
    }
}
void insert_subtree(tree *&t, tree *&t1)
{
    if(t == 0){
        t = t1;
    } else {
        if(t->num == t1->num){
            t->cnt += t1->cnt;
            insert_subtree(t->left, t1->left);
            insert_subtree(t->right, t1->right);
        } else if(t->num < t1->num){insert_subtree(t->right, t1);}
        else insert_subtree(t->left, t1);
    }
}

int main()
{
  tree *t = 0;
  insert(t, 0);
  insert(t, 2);
  insert(t, 3);
  insert(t, 0);
  insert(t, 1);
  insert(t, 1);
  //go(t);
  tree *t1 = 0;
  insert(t1, 0);
  insert(t1, 4);
  insert_subtree(t, t1);
  go(t);
}